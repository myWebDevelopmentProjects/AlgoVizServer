<?xml version="1.0" encoding="utf-8"?>
<schema>
    <main-settings>
        <main-title>Візуалізація алгоритмів локального сортування BST-дерева</main-title>
        <methodes-block>
            <methodes-manually>
                <button function="addElement()" >Додати елемент</button>
                <button function="deleteElement()">Видалити елемент</button>
            </methodes-manually>
            <methodes-auto-by-order-increase>
                <button function="addElementByOrderIncrease()">Додати елемент</button>
                <button function="deleteElementByOrderIncrease()">Видалити елемент</button>
            </methodes-auto-by-order-increase>
            <methodes-auto-by-order-decrease>
                <button function="addElementByOrderDecrease()">Додати елемент</button>
                <button function="deleteElementByOrderDecrease()">Видалити елемент</button>
            </methodes-auto-by-order-decrease>
        </methodes-block>
        <structure>
            <type>BST</type>
            <root value="">
                <left-node value="">
                    <left-node value="">
                        <left-node value="">
                            <left-node value="">
                                <left-node value="">

                                </left-node>
                                <right-node value="">

                                </right-node>
                            </left-node>
                            <right-node value="">
                                <left-node value="">

                                </left-node>
                                <right-node value="">

                                </right-node>
                            </right-node>
                        </left-node>
                        <right-node value="">
                            <left-node value="">
                                <left-node value="">

                                </left-node>
                                <right-node value="">

                                </right-node>
                            </left-node>
                            <right-node value="">
                                <left-node value="">

                                </left-node>
                                <right-node value="">

                                </right-node>
                            </right-node>
                        </right-node>                     
                    </left-node>
                    <right-node value="">
                        <left-node value="">
                            <left-node value="">
                                <left-node value="">

                                </left-node>
                                <right-node value="">

                                </right-node>
                            </left-node>
                            <right-node value="">
                                <left-node value="">

                                </left-node>
                                <right-node value="">

                                </right-node>
                            </right-node>
                        </left-node>
                        <right-node value="">
                            <left-node value="">
                                <left-node value="">

                                </left-node>
                                <right-node value="">

                                </right-node>
                            </left-node>
                            <right-node value="">
                                <left-node value="">

                                </left-node>
                                <right-node value="">

                                </right-node>
                            </right-node>
                        </right-node>
                    </right-node> 
                </left-node>
                <right-node value="">
                    <left-node value="">
                        <left-node value="">

                        </left-node>
                        <right-node value="">

                        </right-node>                    
                    </left-node>
                    <right-node value="">
                        <left-node value="">

                        </left-node>
                        <right-node value="">

                        </right-node>
                    </right-node>                     
                </right-node>                
            </root>
        </structure>
        <functions-block>
            <button function="balancingRandomization()">Рандомізація</button>
            <button function="balancingDepreciation()">Амортизація</button>			
            <button function="balancingOptimization()">Оптимізація</button>
        </functions-block>
    </main-settings>
    <procedure init="true" id="INSERT_BST" args="(Root, Object)">
        <instruction>
            <comment-text>1 Метод добавления нового элемента в BST-дерево</comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ New_Elem <- call new Node(Object) ]]></code>
        </instruction>
        <instruction>
            <comment-text>2 Метод добавления нового элемента в BST-дерево</comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ Root <- call Insert_Node(Root, New_Elem) ]]></code>
        </instruction>
    </procedure>
    <procedure id="INSERT_NODE" args="(Current,  New_Elem)">
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ if Current = NULL then ]]></code>
        </instruction>
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ return  New_Elem ]]></code>
        </instruction>
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ if data(New_Elem) < data(Current) then ]]></code>
        </instruction> 
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ left(Current) <- call Insert_Node(left(Current), New_Elem) ]]></code>
        </instruction> 
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ Current <- call Rotation_R(Current) <br/> else ]]></code>
        </instruction>  
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ right(Current) <- call Insert_Node(right(Current), New_Elem) ]]></code>
        </instruction>         
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ Current <- call Rotation_L(Current) ]]></code>
        </instruction>
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ return Current ]]></code>
        </instruction>                                      
    </procedure> 
    <procedure id="ROTATION_R" args="(Current)">
        <instruction>
            <comment-text>Метод – ротация вправо</comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ Temp <- left(Current) ]]></code>
        </instruction>   
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ left(Current) <- right(Temp) ]]></code>
        </instruction> 
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ right(Temp) <- Current ]]></code>
        </instruction>   
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ Current <- Temp  ]]></code>
        </instruction>  
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ return Current   ]]></code>
        </instruction>                                   
    </procedure> 
    <procedure id="ROTATION_L" args="(Current)">
        <instruction>
            <comment-text>Метод – ротация влево</comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ Temp <- right(Current) ]]></code>
        </instruction> 
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ Temp <- right(Current) ]]></code>
        </instruction>    
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ right(Current) <- left(Temp) ]]></code>
        </instruction>   
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ left(Temp) <- Current ]]></code>
        </instruction>  
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ Current <- Temp ]]></code>
        </instruction> 
        <instruction>
            <comment-text></comment-text>
            <comment-sound url=""/>
            <code><![CDATA[ return Current ]]></code>
        </instruction>                                     
    </procedure>   
</schema>
