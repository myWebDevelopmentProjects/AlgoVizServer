<?xml version="1.0" encoding="utf-8"?>
<schema>
    <procedure current="true" id="INSERT_BST" args="(Root, Object)">
        <instruction>
            <comment-text>1 Метод добавления нового элемента в BST-дерево</comment-text>
            <comment-audio url="audio/Matt Skyer - Our Galaxy.mp3"/>
            <code><![CDATA[ <span class="grey">New_Elem</span> <- call new Node(Object) ]]></code>
            <function-instruction>
                <![CDATA[
                var  New_Elem = $("data_structure items-wrapper item-list:nth-child(1)");
                var BST = $("bst-structure");
                console.log("New_Elem as Root", New_Elem.html());
                BST.find("._0").html(New_Elem.html()).show();
                New_Elem.hide();
                ]]>
            </function-instruction>
        </instruction>
        <instruction>
            <comment-text>2 Метод добавления нового элемента в BST-дерево</comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ Root <- call Insert_Node(Root, New_Elem) ]]></code>
            <function-instruction>
                <![CDATA[
                var  New_Elem = $("data_structure active_field item:nth-child(1)");
                var BST = $("bst-structure");
                console.log("New_Elem as Root", New_Elem.html());
                BST.find("._1_1").html(New_Elem.html()).show();
                New_Elem.hide();
                ]]>
            </function-instruction>
        </instruction>
    </procedure>
    <procedure current="false" id="INSERT_NODE" args="(Current,  New_Elem)">
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ if Current = NULL then ]]></code>
        </instruction>
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ return  New_Elem ]]></code>
        </instruction>
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ if data(New_Elem) < data(Current) then ]]></code>
        </instruction> 
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ left(Current) <- call Insert_Node(left(Current), New_Elem) ]]></code>
        </instruction> 
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ Current <- call Rotation_R(Current) <br/> else ]]></code>
        </instruction>  
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ right(Current) <- call Insert_Node(right(Current), New_Elem) ]]></code>
        </instruction>         
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ Current <- call Rotation_L(Current) ]]></code>
        </instruction>
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ return Current ]]></code>
        </instruction>                                      
    </procedure> 
    <procedure current="false" id="ROTATION_R" args="(Current)">
        <instruction>
            <comment-text>Метод – ротация вправо</comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ Temp <- left(Current) ]]></code>
        </instruction>   
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ left(Current) <- right(Temp) ]]></code>
        </instruction> 
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ right(Temp) <- Current ]]></code>
        </instruction>   
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ Current <- Temp  ]]></code>
        </instruction>  
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ return Current   ]]></code>
        </instruction>                                   
    </procedure> 
    <procedure current="false" id="ROTATION_L" args="(Current)">
        <instruction>
            <comment-text>Метод – ротация влево</comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ Temp <- right(Current) ]]></code>
        </instruction> 
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ Temp <- right(Current) ]]></code>
        </instruction>    
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ right(Current) <- left(Temp) ]]></code>
        </instruction>   
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ left(Temp) <- Current ]]></code>
        </instruction>  
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ Current <- Temp ]]></code>
        </instruction> 
        <instruction>
            <comment-text></comment-text>
            <comment-audio url=""/>
            <code><![CDATA[ return Current ]]></code>
        </instruction>                                     
    </procedure>   
</schema>
